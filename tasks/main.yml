---

- name: Create home directory
  file: state=directory path="{{ kibana_prefix_dir }}" owner=root group=root mode=0755
  tags:
    - kibana

- name: Download release
  get_url: url="https://download.elastic.co/kibana/kibana/kibana-{{ kibana_version }}-{{ kibana_arch }}.tar.gz" dest="{{ kibana_prefix_dir }}/kibana-{{ kibana_version }}-{{kibana_arch}}.tar.gz" owner=root group=root mode=0644
  tags:
    - kibana

- name: Unzip release
  unarchive:
  args:
    copy:    no
    src:     "{{ kibana_prefix_dir }}/kibana-{{ kibana_version }}-{{kibana_arch}}.tar.gz"
    dest:    "{{ kibana_prefix_dir }}"
    creates: "{{ kibana_prefix_dir }}/kibana-{{ kibana_version }}-{{kibana_arch}}"
  register: new_kibana_release_directory
  tags:
    - kibana

- name: Link latest release
  file: state=link src="{{ kibana_prefix_dir }}/kibana-{{ kibana_version }}-{{kibana_arch}}" dest="{{ kibana_prefix_dir }}/kibana" owner=root group=root mode=0755
  when: new_kibana_release_directory.changed
  tags:
    - kibana

- name: Create configuration directory
  file: state=directory path="{{ kibana_conf_dir }}" owner=root group=root mode=0755
  tags:
    - kibana

- name: Create log directory
  file: state=directory path={{ kibana_log_dir }} owner={{ kibana_user }} group={{ kibana_group }} mode=0755
  tags:
    - kibana
    - logging

- name: Create logrotate configuration file
  template: src=logrotate.j2 dest="{{ kibana_logrotate_dir }}/kibana" owner=root group=root mode=0644
  tags:
    - kibana
    - logrotate
    
- name: Create Kibana configuration file
  template: src=kibana.yml.j2 dest="{{ kibana_conf_dir }}/kibana.yml" owner=root group=root mode=0644
  notify:
    - restart kibana
  tags:
    - kibana

- include: plugins.yml
  tags:
    - kibana

- name: Create upstart configuration file
  template: src=upstart.conf.j2 dest=/etc/init/kibana.conf owner=root group=root mode=0644
  when: ansible_os_family == "Debian"
  notify:
    - restart kibana
  tags:
    - upstart
    - kibana

- name: Start Kibana service
  service: name=kibana state={{kibana_state}} enabled={{ kibana_enabled }}
  tags:
    - kibana
    - service
